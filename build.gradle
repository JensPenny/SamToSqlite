plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.0'
    id 'application'
    id 'maven-publish'
}

group = 'com.jenspenny'
version = '0.3.5'
def exposedVersion = '0.44.1'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    implementation("org.jetbrains.exposed:exposed-core: $exposedVersion")
    implementation("org.jetbrains.exposed:exposed-dao:$exposedVersion")
    implementation("org.jetbrains.exposed:exposed-jdbc:$exposedVersion")
    implementation("org.jetbrains.exposed:exposed-java-time:$exposedVersion")

    implementation('org.xerial:sqlite-jdbc:3.42.0.0')

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.4.2'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.13.4'
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.13.4'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.14.0'

    //implementation 'io.github.microutils:kotlin-logging-jvm:3.0.2'

    implementation 'org.slf4j:slf4j-api:2.0.3'
    implementation 'ch.qos.logback:logback-classic:1.4.4'
    implementation 'ch.qos.logback:logback-core:1.4.4'

}

test {
    useJUnitPlatform()
    testLogging {
        events("passed", "skipped", "failed")
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = '14'
    //kotlinOptions.jvmTarget = '17'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '14'
    //kotlinOptions.jvmTarget = '17'
}

application {
    mainClassName = 'StringBuilderParserKt'
}

//Building a fat jar to more easily deploy this
jar {
    manifest {
        attributes["Main-Class"] = "StringBuilderParserKt"
    } from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/JensPenny/SamToSqlite"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            artifactId 'samtosql'
            from(components.java)
        }
    }
}
